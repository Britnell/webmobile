{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useEventListener","name","callback","options","React","useEffect","window","addEventListener","removeEventListener","quickShow","obj","Object","keys","map","k","i","One","dependencies","nextLevel","useState","orientation","setOrientation","ev","data","a","alpha","b","beta","g","gamma","useCallback","onClick","Two","acc","nograv","gyro","imu","setImu","x","accelerationIncludingGravity","y","z","acceleration","rotationRate","Three","foreground","setForeground","document","Date","Four","touch","setTouch","down","move","up","onMove","touches","length","preventDefault","passive","usePointer","snd","tch","clientX","clientY","Five","dep","clipb","setClipb","type","txt","getSelection","toString","navigator","clipboard","writeText","clipboardData","getData","Six","loc","setLoc","JSON","stringify","callb","lat","coords","latitude","long","longitude","alt","altitude","accur","accuracy","geolocation","getCurrentPosition","Seven","screen","orient","setOrient","Zero","Riddles","props","level","setLevel","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48096917.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction useEventListener(name,callback,options){\n  React.useEffect(()=>{\n    window.addEventListener(name,callback,options);\n    return ()=> window.removeEventListener(name,callback)\n  },[callback])\n}\n\nfunction useDeviceOrientation(callback,dependencies){\n  useEventListener('deviceorientation',React.useCallback(callback,dependencies))\n}\n\nfunction useDeviceMotion(callback,dependencies){\n  useEventListener('devicemotion', React.useCallback(callback,dependencies));\n}\n\nfunction useForegroundDetection(callback,dependencies){\n  useEventListener('visibilitychange', React.useCallback(callback,dependencies));\n}\n\nfunction usePointer(down,move,up){\n  // * start\n  useEventListener('touchstart',(ev)=>{\n    down(ev)\n    return false;\n  })\n  // * move\n  const onMove = React.useCallback((ev)=>{\n    if(ev.touches.length>1) ev.preventDefault()\n    move(ev)\n  },[move])\n  React.useEffect(()=>{\n    window.addEventListener('touchmove',onMove,{passive:false});\n    return ()=> window.removeEventListener('touchmove',onMove)\n  },[onMove])\n  // * End\n  useEventListener('touchend',(ev)=>{\n    up(ev)\n    return false;\n  })\n}\n\nfunction useClipboard(callback,dep){\n  useEventListener('copy',React.useCallback(callback,dep) )\n  useEventListener('paste',React.useCallback(callback,dep) )\n}\n\nfunction quickShow(obj){\n  let res = []\n  if(!obj)      return;\n  return Object.keys(obj).map((k,i)=><div> {k} : {obj[k]}</div>)\n}\n\n\n\nfunction One({nextLevel}){\n  const [orientation,setOrientation] = React.useState(()=>{\n    if (!'DeviceOrientationEvent' in window) {\n      return 'X'\n    }\n  })\n\n  function onOrientationData(ev){\n    let data = {\n      a: ev.alpha,\n      b: ev.beta,\n      g: ev.gamma,\n    }\n    setOrientation(data)  \n    //\n  }\n  \n  useDeviceOrientation(onOrientationData,[])\n\n\n  return (<div>\n    <div>One</div>\n    <div>Orientation</div>\n    <div>{quickShow(orientation)}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\nfunction Two({nextLevel}){\n  const [imu,setImu] = React.useState()\n\n  function onMotionData(ev){\n    let data = {\n      acc: {\n        x: ev.accelerationIncludingGravity.x,\n        y: ev.accelerationIncludingGravity.y,\n        z: ev.accelerationIncludingGravity.z\n      },\n      nograv: {\n        x: ev.acceleration.x,\n        y: ev.acceleration.y,\n        z: ev.acceleration.z\n      },\n      gyro: {\n        x: ev.rotationRate.alpha,\n        y: ev.rotationRate.beta,\n        z: ev.rotationRate.gamma\n      },\n    }\n    setImu(data)\n  }\n\n  useDeviceMotion(onMotionData,[])\n\n  let acc, nograv, gyro\n  if(imu && imu.acc)  acc = imu.acc\n  if(imu && imu.nograv)  nograv = imu.nograv\n  if(imu && imu.gyro)  gyro = imu.gyro\n\n  return (<div>\n    <div>Two</div>\n    <div>ACC </div>\n    <div>{quickShow(acc)}</div>\n    <div>No gravity</div>\n    <div>{quickShow(nograv)}</div>\n    <div>Gyro</div>\n    <div>{quickShow(gyro)}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\n\nfunction Three({nextLevel}){\n  const [foreground,setForeground] = React.useState('active')\n\n  function onForegroundChange(){\n    if(document['hidden']){\n      setForeground(` You left at ${new Date()} `)\n    }\n  }\n\n  useForegroundDetection(onForegroundChange,[])\n\n  return (<div>\n    <div>Three</div>\n    <div> In/Activeness</div>\n    <div>{foreground}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\nfunction Four({nextLevel}){\n  const [touch,setTouch] = React.useState()\n  \n  usePointer(\n    ()=>setTouch('start'),\n    (ev)=>{\n      let tch = `${ev.touches[0].clientX},${ev.touches[0].clientY} `\n      let snd;\n      if(ev.touches.length>1)\n        snd = `${ev.touches[1].clientX},${ev.touches[1].clientY} `\n      \n      setTouch(`move ${tch} \\t  ${snd} `)\n    },\n    ()=>setTouch('end')\n  )\n  \n\n  return (<div>\n    <div>Four</div>\n    <div>{touch}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\n\nfunction Five({nextLevel}){\n  const [clipb,setClipb] = React.useState()\n\n  useClipboard((ev)=>{\n    if(ev.type==='copy'){\n      let txt = document.getSelection().toString()\n      if(txt.length>0)\n        setClipb(` Copied : ${txt}`)\n      navigator.clipboard.writeText(`\"${txt}\"`)\n    }\n    else if(ev.type==='paste'){\n      let txt = ev.clipboardData.getData('text/plain')\n      setClipb(` Pasted : ${txt} `)\n    }\n  },[])\n\n  return (\n  <div>\n    <div>FIVE</div>\n    <div>Clipboard</div>\n    <div>{clipb}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\n\nfunction getLocation(callb){\n  navigator.geolocation.getCurrentPosition(callb)\n}\n\nfunction Six({nextLevel}){\n\n  const [loc,setLoc] = React.useState()\n\n  function locButton(){\n    getLocation((data)=>{\n      setLoc({\n        lat: data.coords.latitude,\n        long: data.coords.longitude,\n        alt: data.coords.altitude,\n        accur: data.coords.accuracy\n      })\n    })\n  }\n\n  return (\n  <div>\n    <div>SIX</div>\n    <div>{JSON.stringify(loc)}</div>\n    <button onClick={locButton} >Get location</button>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\nfunction useScreenOrientation(callback){\n  window.screen.orientation.addEventListener('change', callback)\n}\n\nfunction Seven({nextLevel}){\n  const [orient,setOrient] = React.useState(window.screen.orientation.type)\n  function orientationChange(ev){\n    setOrient(window.screen.orientation.type)\n  }\n  useScreenOrientation(orientationChange)\n\n  return (\n  <div>\n    <div>SEVEN</div>\n    <div>{orient}</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\nfunction Zero({nextLevel}){\n  return (\n  <div>\n    <div>ZERO</div>\n    <button onClick={nextLevel}>Next</button>\n  </div>)\n}\n\nfunction Riddles(props){\n  const [level,setLevel] = React.useState(0)\n\n  \n  function nextLevel(){\n    setLevel(level+1)\n  }\n  \n\n  if(level==0)          return <Zero nextLevel={nextLevel}/>\n  else if(level==1)     return <One nextLevel={nextLevel}/>\n  else if(level==2)     return <Two nextLevel={nextLevel}/>\n  else if(level==3)     return <Three nextLevel={nextLevel}/>\n  else if(level==4)     return <Four nextLevel={nextLevel}/>\n  else if(level==5)     return <Five nextLevel={nextLevel}/>\n  else if(level==6)     return <Six nextLevel={nextLevel}/>\n  else if(level==7)     return <Seven nextLevel={nextLevel}/>\n  \n  return (<div>?</div>)\n}\n\nfunction App() {\n  return (\n    <>\n      <Riddles>\n        {/* <Pos></Pos> */}\n        {/* <Mov></Mov> */}\n      </Riddles>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}